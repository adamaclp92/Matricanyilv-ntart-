<Window x:Class="MatricaNyilv.Registration"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MatricaNyilv"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" xmlns:System="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
         Title="Regisztráció" Height="350" Width="400" WindowStartupLocation="CenterScreen"  ResizeMode="CanMinimize"  WindowStyle="None" Loaded="Window_Loaded">
    <Window.Resources>
        <Style x:Key="extiButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{DynamicResource PrimaryHueDarkBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueDarkBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkForegroundBrush}"/>
            <Setter Property="materialDesign:ButtonProgressAssist.IndicatorForeground" Value="{DynamicResource PrimaryHueLightBrush}"/>
            <Style.BasedOn>
                <Style TargetType="{x:Type ButtonBase}">
                    <Setter Property="Width" Value="56"/>
                    <Setter Property="Height" Value="56"/>
                    <Style.BasedOn>
                        <Style TargetType="{x:Type ButtonBase}">
                            <Setter Property="FocusVisualStyle">
                                <Setter.Value>
                                    <Style>
                                        <Setter Property="Control.Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
                            <Setter Property="materialDesign:RippleAssist.Feedback" Value="White"/>
                            <Setter Property="materialDesign:ButtonProgressAssist.IndicatorForeground" Value="{DynamicResource SecondaryHueMidBrush}"/>
                            <Setter Property="materialDesign:ButtonProgressAssist.IndicatorBackground" Value="{DynamicResource MaterialDesignDivider}"/>
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="Cursor" Value="Hand"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth2"/>
                            <Setter Property="Padding" Value="1"/>
                            <Setter Property="Width" Value="40"/>
                            <Setter Property="Height" Value="40"/>
                            <Setter Property="materialDesign:ButtonProgressAssist.Opacity" Value="1"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                                        <Grid>
                                            <AdornerDecorator CacheMode="{Binding (materialDesign:ShadowAssist.CacheMode), RelativeSource={RelativeSource Self}}">
                                                <Ellipse x:Name="border" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}">
                                                    <Ellipse.Effect>
                                                        <Binding Path="(materialDesign:ShadowAssist.ShadowDepth)" RelativeSource="{RelativeSource TemplatedParent}">
                                                            <Binding.Converter>
                                                                <materialDesign:ShadowConverter/>
                                                            </Binding.Converter>
                                                        </Binding>
                                                    </Ellipse.Effect>
                                                </Ellipse>
                                            </AdornerDecorator>
                                            <ProgressBar x:Name="ProgressBar" Background="{Binding (materialDesign:ButtonProgressAssist.IndicatorBackground), RelativeSource={RelativeSource TemplatedParent}}" Foreground="{Binding (materialDesign:ButtonProgressAssist.IndicatorForeground), RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Stretch" IsIndeterminate="{Binding (materialDesign:ButtonProgressAssist.IsIndeterminate), RelativeSource={RelativeSource TemplatedParent}}" Maximum="{Binding (materialDesign:ButtonProgressAssist.Maximum), RelativeSource={RelativeSource TemplatedParent}}" Margin="-8" Minimum="{Binding (materialDesign:ButtonProgressAssist.Minimum), RelativeSource={RelativeSource TemplatedParent}}" Opacity="{Binding (materialDesign:ButtonProgressAssist.Opacity), RelativeSource={RelativeSource TemplatedParent}}" RenderTransformOrigin="0.5,0.5" Style="{DynamicResource MaterialDesignCircularProgressBar}" Value="{Binding (materialDesign:ButtonProgressAssist.Value), RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Stretch">
                                                <ProgressBar.Height>
                                                    <TemplateBinding Property="Height">
                                                        <TemplateBinding.ConverterParameter>
                                                            <System:Int32>8</System:Int32>
                                                        </TemplateBinding.ConverterParameter>
                                                        <TemplateBinding.Converter>
                                                            <materialDesign:MathConverter Operation="Add"/>
                                                        </TemplateBinding.Converter>
                                                    </TemplateBinding>
                                                </ProgressBar.Height>
                                                <ProgressBar.RenderTransform>
                                                    <TransformGroup>
                                                        <ScaleTransform ScaleY="0" ScaleX="0"/>
                                                    </TransformGroup>
                                                </ProgressBar.RenderTransform>
                                                <ProgressBar.Visibility>
                                                    <Binding Path="(materialDesign:ButtonProgressAssist.IsIndicatorVisible)" RelativeSource="{RelativeSource TemplatedParent}">
                                                        <Binding.Converter>
                                                            <BooleanToVisibilityConverter/>
                                                        </Binding.Converter>
                                                    </Binding>
                                                </ProgressBar.Visibility>
                                                <ProgressBar.Width>
                                                    <TemplateBinding Property="Width">
                                                        <TemplateBinding.ConverterParameter>
                                                            <System:Int32>8</System:Int32>
                                                        </TemplateBinding.ConverterParameter>
                                                        <TemplateBinding.Converter>
                                                            <materialDesign:MathConverter Operation="Add"/>
                                                        </TemplateBinding.Converter>
                                                    </TemplateBinding>
                                                </ProgressBar.Width>
                                            </ProgressBar>
                                            <Ellipse Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}"/>
                                            <materialDesign:Ripple ClipToBounds="True" Clip="{Binding RenderedGeometry, ElementName=GeometryEllipse}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            <Ellipse x:Name="GeometryEllipse" Focusable="False" Fill="Transparent" IsHitTestVisible="False"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="Button.IsDefaulted" Value="True">
                                                <Setter Property="Stroke" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Opacity" Value="0.23"/>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="materialDesign:ShadowAssist.Darken" TargetName="border" Value="True"/>
                                                <Setter Property="RenderTransformOrigin" Value="0.5, 0.5"/>
                                                <Setter Property="RenderTransform">

                                                    <Setter.Value>
                                                        <ScaleTransform ScaleX="1.2" ScaleY="1.2"/>
                                                    </Setter.Value>
                                                </Setter>
                                            </Trigger>
                                            <Trigger Property="IsKeyboardFocused" Value="True">
                                                <Setter Property="materialDesign:ShadowAssist.Darken" TargetName="border" Value="True"/>
                                            </Trigger>
                                            <Trigger Property="materialDesign:ButtonProgressAssist.IsIndicatorVisible" Value="True">
                                                <Trigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Duration="0:0:0.2" From="0.9" To="1" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="ProgressBar"/>
                                                            <DoubleAnimation Duration="0:0:0.2" From="0.9" To="1" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="ProgressBar"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </Trigger.EnterActions>
                                                <Trigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Duration="0:0:0.2" From="1" To="0.9" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="ProgressBar"/>
                                                            <DoubleAnimation Duration="0:0:0.2" From="1" To="0.9" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="ProgressBar"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </Trigger.ExitActions>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Style.BasedOn>
                </Style>
            </Style.BasedOn>
        </Style>


    </Window.Resources>
    <Grid MouseDown="Grid_MouseDown">

        <Grid.Background>
            <LinearGradientBrush StartPoint="0.1,0" EndPoint="0.9,1">
                <GradientStop Color="DarkRed" Offset="1"/>
                <GradientStop Color="Orange" Offset="0"/>

            </LinearGradientBrush>
        </Grid.Background>
        <Border Height="340" VerticalAlignment="Top" CornerRadius="0 0 180 0" Background="Black"/>
        <StackPanel Orientation="Horizontal">

            <StackPanel>
                <StackPanel Margin="20 0">
                    <TextBlock Text="Új felhasználó" Margin="20" Foreground="White" TextAlignment="Center" FontSize="30" FontFamily="Sitka Text"/>
                    <StackPanel x:Name="stack1" Orientation="Horizontal">
                        <materialDesign:PackIcon Kind="User" Width="25" Height="25" Foreground="White"/>
                        <TextBox x:Name="usernametextbox" Margin="10 0" materialDesign:HintAssist.Hint="Felhasználónév" Foreground="White" FontSize="15" CaretBrush="White"  SelectionBrush="White" Width="200" BorderBrush="White"  GotKeyboardFocus="usernametextbox_GotKeyboardFocus" />
                    </StackPanel>
                    <StackPanel  Orientation="Horizontal" Margin="0 20">
                        <materialDesign:PackIcon Kind="Connection" Width="25" Height="25" Foreground="White"/>
                        <ComboBox x:Name="userlevelcombo" Margin="10 0" materialDesign:HintAssist.Hint="Kiválasztás"  FontSize="15" Width="200" BorderBrush="White" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" >
                        <materialDesign:PackIcon Kind="Lock"  Width="25" Height="25" Foreground="White"/>
                        <PasswordBox x:Name="passwordtextbox" Margin="10 0" materialDesign:HintAssist.Hint="Jelszó" Foreground="White" FontSize="15" CaretBrush="White" SelectionBrush="White" Width="200" BorderBrush="White" GotKeyboardFocus="passwordtextbox_GotKeyboardFocus"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0 20">
                        <materialDesign:PackIcon Kind="Lock"  Width="25" Height="25" Foreground="White"/>
                        <PasswordBox x:Name="passwordconfirmtextbox" Margin="10 0" materialDesign:HintAssist.Hint="Jelszó megerősítés" Foreground="White" FontSize="15" CaretBrush="White" SelectionBrush="White" Width="200" BorderBrush="White" GotKeyboardFocus="passwordconfirmtextbox_GotKeyboardFocus"/>
                    </StackPanel>
                </StackPanel>
                <StackPanel Margin="10" HorizontalAlignment="Center">
                    <Button x:Name="confirmbtn" Content="Létrehozás" FontSize="15" Width="150" Height="40" Click="confirmbtn_Click" Style="{StaticResource MaterialDesignRaisedButton}"
                        materialDesign:ButtonAssist.CornerRadius="10" BorderThickness="2"
                         IsDefault="True"/>
                </StackPanel>
            </StackPanel>
            <StackPanel Width="100">
                <Button x:Name="exitbutton" Margin="10 20" Background="{x:Null}" ToolTip="Exit" Click="exitbutton_Click" BorderBrush="White" Style="{DynamicResource extiButton}" IsCancel="True">
                    <materialDesign:PackIcon Kind="Close" Width="30" Height="30" Foreground="White"/>
                </Button>
            </StackPanel>
        </StackPanel>
    </Grid>
</Window>
